DROP TRIGGER INSERT_ATTACH;
DROP TRIGGER INSERT_CHECK_PLAN;
DROP TRIGGER INSERT_MESSAGE;
DROP TRIGGER INSERT_MODIFY_COM;
DROP TRIGGER INSERT_MODIFY_PORDUCT;
DROP TRIGGER INSERT_PRO_APPLICATION;
DROP TRIGGER INSERT_KPID;
DROP TRIGGER INSERT_TB_APPENDIX;
DROP TRIGGER INSERT_TB_EXCHANGES;
DROP TRIGGER INSERT_TB_INSCRAPT;
DROP TRIGGER INSERT_TB_MAINTEXT;
DROP TRIGGER INSERT_TB_STEPLOG;
DROP TRIGGER INSERT_TB_STEPTABLE;


ALTER TABLE AGREEMENT_TABLE RENAME TO HKG_AGREEMENT;
ALTER TABLE CERTEXES RENAME TO HKG_FEE_CERT;
ALTER TABLE CHECK_OK RENAME TO HKG_CHECK_RESULT;
ALTER TABLE CHECK_PLAN RENAME TO HKG_CHECK_PLAN;
ALTER TABLE EQUIPMENT_INFO RENAME TO HKG_INFO_EQUIPMENT;
ALTER TABLE EXPORT_INFO RENAME TO HKG_INFO_EXPORT;
ALTER TABLE FLOWCOM_TABLE RENAME TO HKG_FLOW_COM;
ALTER TABLE FLOW_PRODUCT RENAME TO HKG_FLOW_PRODUCT;
ALTER TABLE PRO_APPLICATION RENAME TO HKG_COM_INTEND;
ALTER TABLE MESSAGE RENAME TO HKG_FLOW_MESSAGE;
ALTER TABLE MODIFY_COM RENAME TO HKG_MODIFY_COM;
ALTER TABLE MODIFY_PRODUCT RENAME TO HKG_MODIFY_PRODUCT;
ALTER TABLE OUTSOURCING_INFO RENAME TO HKG_INFO_OUTSOURCING;
ALTER TABLE PASSED_PRODUCT RENAME TO HKG_PRODUCT_PASSED;
ALTER TABLE PRODUCER_INFO RENAME TO HKG_INFO_PRODUCER;
ALTER TABLE PRODUCER_EXAM RENAME TO HKG_CHECK_SELF;
ALTER TABLE PRODUCT_MONEY_NOTICE RENAME TO HKG_FEE_TEST;
ALTER TABLE REQUISITION_DETAIL RENAME TO HKG_PRODUCT_APP;
ALTER TABLE REQUISITION_MASTER RENAME TO HKG_COM_MAIN;
ALTER TABLE RESUBMITPRODUCT RENAME TO HKG_PRODUCT_RESUBMIT;
ALTER TABLE SEND_PRODUCT_NOTICE RENAME TO HKG_TEST_NOTICE;
ALTER TABLE TEST_RESULT RENAME TO HKG_TEST_RESULT;
ALTER TABLE USER_TABLE RENAME TO HKG_USER;

CREATE SEQUENCE  "HKG_SEQ_FLOW_PRODUCT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_TEST_RESULT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_TEST_NOTICE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_PRODUCT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_COMMON"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_PRODUCT_PASSED"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_TEST_FEE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_PRODUCT_CERTFEE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_CHECKPLAN"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_FLOW_MESSAGE"  MINVALUE 20000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 20000 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_MODIFY_COM"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "HKG_SEQ_MODIFY_PRODUCT"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 ORDER  NOCYCLE ;
CREATE SEQUENCE  "SEQ_TB_APPENDIX"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  "SEQ_TB_APPLICATIONKP"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  "SEQ_TB_EXCHANGES"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  "SEQ_TB_INSCRIPT"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  "SEQ_TB_MAINTEXT"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  "SEQ_TB_STEPLOG_LOG_ID"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;
CREATE SEQUENCE  "SEQ_TB_KPID"  MINVALUE 10000 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10000 CACHE 20 NOORDER  NOCYCLE ;

create or replace TRIGGER "HKG_INSERT_CHECKPLAN" BEFORE
INSERT ON "HKG_CHECK_PLAN" FOR EACH ROW Begin
SELECT HKG_SEQ_CHECKPLAN.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

create or replace TRIGGER "HKG_INSERT_MESSAGE" BEFORE
INSERT ON "HKG_FLOW_MESSAGE" FOR EACH ROW Begin
SELECT HKG_SEQ_FLOW_MESSAGE.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

create or replace TRIGGER "HKG_INSERT_MODIFYCOM" BEFORE
INSERT ON "HKG_MODIFY_COM" FOR EACH ROW Begin
SELECT HKG_SEQ_MODIFY_COM.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

create or replace TRIGGER "HKG_INSERT_MODIFYPORDUCT" BEFORE
INSERT ON "HKG_MODIFY_PRODUCT" FOR EACH ROW Begin
SELECT HKG_SEQ_MODIFY_PRODUCT.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

create or replace TRIGGER "HKG_INSERT_INTEND" BEFORE
INSERT ON "HKG_COM_INTEND" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修正式申请，增加ID字段*/
alter table HKG_COM_MAIN add (
	"ID" INTEGER DEFAULT 0 NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_COM" BEFORE
INSERT ON "HKG_COM_MAIN" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修产品申请，增加ID字段*/
alter table HKG_PRODUCT_APP add (
	"ID" INTEGER DEFAULT 0  NOT NULL ENABLE,
	"ISCHECKFAILED" INTEGER DEFAULT 0  NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_PRODUCT" BEFORE
INSERT ON "HKG_PRODUCT_APP" FOR EACH ROW Begin
SELECT HKG_SEQ_PRODUCT.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修生产者情况，增加ID字段*/
alter table HKG_INFO_PRODUCER add (
	"ID" INTEGER DEFAULT 0 NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_PRODUCERINFO" BEFORE
INSERT ON "HKG_INFO_PRODUCER" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修设备情况，增加ID字段*/
alter table HKG_INFO_EQUIPMENT add (
	"ID" INTEGER DEFAULT 0 NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_EQUIPMENT" BEFORE
INSERT ON "HKG_INFO_EQUIPMENT" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修外购外协情况，增加ID字段*/
alter table HKG_INFO_OUTSOURCING add (
	"ID" INTEGER DEFAULT 0 NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_OUTSOURCING" BEFORE
INSERT ON "HKG_INFO_OUTSOURCING" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修出口情况，增加ID字段*/
alter table HKG_INFO_EXPORT add (
	"ID" INTEGER DEFAULT 0 NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_EXPORT" BEFORE
INSERT ON "HKG_INFO_EXPORT" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修签订协议表，增加ID字段*/
alter table HKG_AGREEMENT add (
	"ID" INTEGER DEFAULT 0 NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_AGREEMENT" BEFORE
INSERT ON "HKG_AGREEMENT" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改送样通知表，增加ID字段*/
alter table HKG_TEST_NOTICE add (
	"ID" INTEGER DEFAULT 0 NOT NULL ENABLE
  );

create or replace TRIGGER "HKG_INSERT_TESTNOTICE" BEFORE
INSERT ON "HKG_TEST_NOTICE" FOR EACH ROW Begin
SELECT HKG_SEQ_TEST_NOTICE.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改产品流程表，增加ID字段*/
alter table HKG_FLOW_PRODUCT add ("ID" INTEGER DEFAULT 0 NOT NULL ENABLE );
  
create or replace TRIGGER "HKG_INSERT_FLOWPRODUCT" BEFORE
INSERT ON "HKG_FLOW_PRODUCT" FOR EACH ROW Begin
SELECT HKG_SEQ_FLOW_PRODUCT.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改企业流程表，增加ID字段*/
alter table HKG_FLOW_COM add ("ID" INTEGER DEFAULT 0 NOT NULL ENABLE );

create or replace TRIGGER "HKG_INSERT_FLOWCOM" BEFORE
INSERT ON "HKG_FLOW_COM" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改企业自查表，增加ID字段*/
alter table HKG_CHECK_SELF add ("ID" INTEGER DEFAULT 0 NOT NULL ENABLE );

create or replace TRIGGER "HKG_INSERT_CHECKSELF" BEFORE
INSERT ON "HKG_CHECK_SELF" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改企业自查表，增加ID字段*/
alter table HKG_CHECK_RESULT add ("ID" INTEGER DEFAULT 0 NOT NULL ENABLE );

create or replace TRIGGER "HKG_INSERT_CHECKRESULT" BEFORE
INSERT ON "HKG_CHECK_RESULT" FOR EACH ROW Begin
SELECT HKG_SEQ_COMMON.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改产品送样表，增加实验室是否确认检测任务字段2016-11-07*/
alter table HKG_TEST_NOTICE add (
	"FLAG_LABCONFIRM_TASK" INTEGER DEFAULT 0 NOT NULL ENABLE,
	"DATE_LABCONFIRM_TASK" DATE,
	"FLAG_LABCONFIRM_PRODUCT" INTEGER DEFAULT 0 NOT NULL ENABLE,
	"DATE_LABCONFIRM_PRODUCT" DATE
  );

/*修改检测结果表，增加ID字段2016-11-09*/
alter table HKG_TEST_RESULT add (
"ID" INTEGER DEFAULT 0 NOT NULL ENABLE, 
"IS_RESULT_SENDED" INTEGER DEFAULT 0 NOT NULL ENABLE ,
"IS_CHECK_FAILED" INTEGER DEFAULT 0 NOT NULL ENABLE 
);
  
create or replace TRIGGER "HKG_INSERT_TESTRESULT" BEFORE
INSERT ON "HKG_TEST_RESULT" FOR EACH ROW Begin
SELECT HKG_SEQ_TEST_RESULT.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改获证产品表，增加ID字段2016-11-10*/
alter table HKG_PRODUCT_PASSED add (
"ID" INTEGER DEFAULT 0 NOT NULL ENABLE 
);
  
create or replace TRIGGER "HKG_INSERT_PRODUCTPASSED" BEFORE
INSERT ON "HKG_PRODUCT_PASSED" FOR EACH ROW Begin
SELECT HKG_SEQ_PRODUCT_PASSED.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改产品缴费表，增加ID字段2016-11-12*/
alter table HKG_FEE_TEST add (
"ID" INTEGER DEFAULT 0 NOT NULL ENABLE 
);
  
create or replace TRIGGER "HKG_INSERT_FEETEST" BEFORE
INSERT ON "HKG_FEE_TEST" FOR EACH ROW Begin
SELECT HKG_SEQ_TEST_FEE.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修核证缴费表，增加ID字段2016-11-14*/
alter table HKG_FEE_CERT add (
"ID" INTEGER DEFAULT 0 NOT NULL ENABLE 
);
  
create or replace TRIGGER "HKG_INSERT_FEECERT" BEFORE
INSERT ON "HKG_FEE_CERT" FOR EACH ROW Begin
SELECT HKG_SEQ_PRODUCT_CERTFEE.NEXTVAL
INTO :NEW.ID
FROM DUAL;
End;
/

/*修改检测缴费通知表，增加汇款单扫描件缩略图 2016-11-27*/
alter table HKG_FEE_TEST add (
"THUMB_FILEADD" VARCHAR2(500 BYTE) 
);

/*修改产品表，增加产品图片缩略图 2016-11-27*/
alter table HKG_PRODUCT_APP add (
"THUMB_PHOTO1" VARCHAR2(500 BYTE), 
"THUMB_PHOTO2" VARCHAR2(500 BYTE), 
"THUMB_PHOTO3" VARCHAR2(500 BYTE), 
"THUMB_PHOTO4" VARCHAR2(500 BYTE), 
"THUMB_PHOTO5" VARCHAR2(500 BYTE) 
);

/*修改获证产品表，增加产品文件和图片缩略图 2016-11-28*/
alter table HKG_PRODUCT_PASSED add (
"FILE_CERT" VARCHAR2(500 BYTE), 
"THUMB_CERT" VARCHAR2(500 BYTE)
);

/*修改获证产品表，增加产品文件和图片缩略图 2016-11-29*/
alter table HKG_TEST_RESULT modify (
"DOCURL" VARCHAR2(200 BYTE)
);

/*修改质量监察协议表，增加文档 2016-11-29*/
alter table HKG_AGREEMENT add (
"DOCURL" VARCHAR2(500 BYTE) 
);

/*修改审查结果确认书表，增加文档 2016-11-29*/
alter table HKG_CHECK_RESULT add (
"DOCURL" VARCHAR2(500 BYTE) 
);

/*修改审查计划表，增加文档 2016-11-29*/
alter table HKG_CHECK_PLAN add (
"DOCURL" VARCHAR2(500 BYTE) 
);

/*修改审查计划表，增加文档 2016-11-29*/
alter table HKG_CHECK_SELF add (
"DOCURL" VARCHAR2(500 BYTE) 
);

/*修改获证产品表，增加产品文件和图片缩略图 2016-11-29*/
alter table HKG_FLOW_MESSAGE modify (
RECEIVER VARCHAR2(2 BYTE),
SENDER VARCHAR2(2 BYTE)
);

/*修改企业自查表，更改类型a1-a53字段为VARCHAR2(4 BYTE) 2017-01-05*/
alter table HKG_check_self modify (
  A1 VARCHAR2(4 BYTE),
  A2 VARCHAR2(4 BYTE),
  A3 VARCHAR2(4 BYTE),
  A4 VARCHAR2(4 BYTE),
  A5 VARCHAR2(4 BYTE),
  A6 VARCHAR2(4 BYTE),
  A7 VARCHAR2(4 BYTE),
  A8 VARCHAR2(4 BYTE),
  A9 VARCHAR2(4 BYTE),
  A10 VARCHAR2(4 BYTE),
  A11 VARCHAR2(4 BYTE),
  A12 VARCHAR2(4 BYTE),
  A13 VARCHAR2(4 BYTE),
  A14 VARCHAR2(4 BYTE),
  A15 VARCHAR2(4 BYTE),
  A16 VARCHAR2(4 BYTE),
  A17 VARCHAR2(4 BYTE),
  A18 VARCHAR2(4 BYTE),
  A19 VARCHAR2(4 BYTE),
  A20 VARCHAR2(4 BYTE),
  A21 VARCHAR2(4 BYTE),
  A22 VARCHAR2(4 BYTE),
  A23 VARCHAR2(4 BYTE),
  A24 VARCHAR2(4 BYTE),
  A25 VARCHAR2(4 BYTE),
  A26 VARCHAR2(4 BYTE),
  A27 VARCHAR2(4 BYTE),
  A28 VARCHAR2(4 BYTE),
  A29 VARCHAR2(4 BYTE),
  A30 VARCHAR2(4 BYTE),
  A31 VARCHAR2(4 BYTE),
  A32 VARCHAR2(4 BYTE),
  A33 VARCHAR2(4 BYTE),
  A34 VARCHAR2(4 BYTE),
  A35 VARCHAR2(4 BYTE),
  A36 VARCHAR2(4 BYTE),
  A37 VARCHAR2(4 BYTE),
  A38 VARCHAR2(4 BYTE),
  A39 VARCHAR2(4 BYTE),
  A40 VARCHAR2(4 BYTE),
  A41 VARCHAR2(4 BYTE),
  A42 VARCHAR2(4 BYTE),
  A43 VARCHAR2(4 BYTE),
  A44 VARCHAR2(4 BYTE),
  A45 VARCHAR2(4 BYTE),
  A46 VARCHAR2(4 BYTE),
  A47 VARCHAR2(4 BYTE),
  A48 VARCHAR2(4 BYTE),
  A49 VARCHAR2(4 BYTE),
  A50 VARCHAR2(4 BYTE),
  A51 VARCHAR2(4 BYTE),
  A52 VARCHAR2(4 BYTE),
  A53 VARCHAR2(4 BYTE)
);

/*修改正式申请表，增加企业到期时间字段  2017-01-03*/
ALTER TABLE HKG_COM_MAIN ADD (
  "EXPIRY_DATE" DATE DEFAULT NULL
);

/*修改产品表，更改产品类型type字段为VARCHAR2(2 BYTE) 2016-12-24*/
alter table HKG_PRODUCT_APP modify (
TYPE VARCHAR2(2 BYTE)
);

/*修改产品送样通知表，增加签发人、发送送样通知人员、检测费用字段 2016-12-19*/
alter table HKG_TEST_NOTICE add (
"SANCTIFIER" VARCHAR2(20 BYTE),
"SENDER" VARCHAR2(20 BYTE),
"TOTALFEE" NUMBER(10,0)
);

/*创建系统配置表*/
CREATE TABLE "HKG_CONFIG" 
(	
	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"APPLY_FEE" NUMBER(8,0) DEFAULT 2000, 
	"COOKER_FEE" NUMBER(8,0) DEFAULT 6600, 
	"WATERHEATER_FEE" NUMBER(8,0)  DEFAULT 8000, 
	"STOVE_FEE" NUMBER(8,0)  DEFAULT 3000, 
	"CHECK_FEE" NUMBER(8,0)  DEFAULT 3000, 
	"REGISTER_FEE" NUMBER(8,0)  DEFAULT 1000, 
	"YEARLY_FEE" NUMBER(8,0)  DEFAULT 2000
);
  

/*创建申请人视图，只保留最新申请2016-11-08*/
  CREATE OR REPLACE FORCE VIEW "HKG_COM_NEWEST" ("RECORD_NO", "OFFSET", "PROPOSER_NAME", "PROPOSER_ADDRESS", "PROPOSER_CORPORATION", "PROPOSER_DATE", "PRODUCER_NAME_C", "PRODUCER_NAME_E", "PRODUCER_ADDRESS_C", "PRODUCER_ADDRESS_E", "PRODUCER_TYPE", "PRODUCER_LINKMAN", "PRODUCER_LINKMAN_DUTY", "PRODUCER_PHONE", "PRODUCER_FAX", "BESINESS_LICENCE_NO", "APPROVE_DEPT", "APPROVE_DATE", "PRODUCT_TYPE1", "LICENCE_NO1", "PRODU_LICENCE_DATE1", "PRODUCT_TYPE2", "LICENCE_NO2", "PRODU_LICENCE_DATE2", "PRODUCT_TYPE3", "LICENCE_NO3", "PRODU_LICENCE_DATE3", "F_QUALITY_SYSTEM", "QS_LAST_MONTH", "F_QS_DOC", "F_ISO", "F_QS_LICENCE", "QS_LICENCE_NAME", "QS_LICENCE_NO", "F_BESINESS_LICENCE", "F_FRAMEWORK", "F_TECHNICAL_MAP", "F_SPECIFICATION", "F_TEST_REPORT", "F_PRODUCT_LICENCE", "F_QS_LICENCE_DOC", "F_PRODU_LICENCE", "F_PRODU_MARK", "F_ISO_DOC", "AUTH_PRODU1", "AUTH_MARK1", "AUTH_PRODU2", "AUTH_MARK2", "AUTH_PRODU3", "AUTH_MARK3", "F_FZJG", "FZJG_NUM", "FZJG_TEXT", "AUTHORIZE_DATE", "APPLICATION_DATE", "SANCTIFIER", "STATE", "ERRTEXT", "OLD_AUTHORIZE_NO", "TYPE", "FYLX", "F_AGREEMENT", "RE_F_Q", "RE_QCONTENT", "RE_F_FQ", "RE_F_CERT", "RE_CERTNAME", "RE_CERTNO", "RE_F_CERTCOPY", "F_ISCHECKOK", "ISFEE", "BEGINFJ", "FEEYEAR", "LIEF_LOGOFF", "ID") AS 
  select 
  "RECORD_NO", 
	"OFFSET", 
	"PROPOSER_NAME", 
	"PROPOSER_ADDRESS", 
	"PROPOSER_CORPORATION", 
	"PROPOSER_DATE", 
	"PRODUCER_NAME_C", 
	"PRODUCER_NAME_E", 
	"PRODUCER_ADDRESS_C", 
	"PRODUCER_ADDRESS_E", 
	"PRODUCER_TYPE", 
	"PRODUCER_LINKMAN", 
	"PRODUCER_LINKMAN_DUTY", 
	"PRODUCER_PHONE", 
	"PRODUCER_FAX", 
	"BESINESS_LICENCE_NO", 
	"APPROVE_DEPT", 
	"APPROVE_DATE", 
	"PRODUCT_TYPE1", 
	"LICENCE_NO1", 
	"PRODU_LICENCE_DATE1", 
	"PRODUCT_TYPE2", 
	"LICENCE_NO2", 
	"PRODU_LICENCE_DATE2", 
	"PRODUCT_TYPE3", 
	"LICENCE_NO3", 
	"PRODU_LICENCE_DATE3", 
	"F_QUALITY_SYSTEM", 
	"QS_LAST_MONTH", 
	"F_QS_DOC", 
	"F_ISO", 
	"F_QS_LICENCE", 
	"QS_LICENCE_NAME", 
	"QS_LICENCE_NO", 
	"F_BESINESS_LICENCE", 
	"F_FRAMEWORK", 
	"F_TECHNICAL_MAP", 
	"F_SPECIFICATION", 
	"F_TEST_REPORT", 
	"F_PRODUCT_LICENCE", 
	"F_QS_LICENCE_DOC", 
	"F_PRODU_LICENCE", 
	"F_PRODU_MARK", 
	"F_ISO_DOC", 
	"AUTH_PRODU1", 
	"AUTH_MARK1", 
	"AUTH_PRODU2", 
	"AUTH_MARK2", 
	"AUTH_PRODU3", 
	"AUTH_MARK3", 
	"F_FZJG", 
	"FZJG_NUM", 
	"FZJG_TEXT", 
	"AUTHORIZE_DATE", 
	"APPLICATION_DATE", 
	"SANCTIFIER", 
	"STATE", 
	"ERRTEXT", 
	"OLD_AUTHORIZE_NO", 
	"TYPE", 
	"FYLX", 
	"F_AGREEMENT", 
	"RE_F_Q", 
	"RE_QCONTENT", 
	"RE_F_FQ", 
	"RE_F_CERT", 
	"RE_CERTNAME", 
	"RE_CERTNO", 
	"RE_F_CERTCOPY", 
	"F_ISCHECKOK", 
	"ISFEE", 
	"BEGINFJ", 
	"FEEYEAR", 
	"LIEF_LOGOFF", 
	"ID"
from HKG_COM_MAIN a
where offset =(
  select max(b.offset) from HKG_COM_MAIN b where b.record_no=a.record_no
);
 
/*创建核证收费列表视图2016-11-15*/

CREATE OR REPLACE FORCE VIEW "HKGDBA"."HKG_FEECERT_LIST" ("RECORD_NO", "P", "CAPTURE_DATE", "CAPTURE_FLAG", "TOTAL") AS 
  select 
	a.record_no,
	b.p, 
    a.capture_date,a.capture_flag,
	sum(a.money) as total 
from HKG_FEE_CERT a inner join HKG_PRODUCT_APP b on a.record_no = b.record_no and a.pno = b.product_no 
group by a.record_no, b.p,  a.capture_date,a.capture_flag;
 


CREATE OR REPLACE TRIGGER "INSERT_TB_KPID" BEFORE
INSERT ON "TB_APPLICATIONKP" FOR EACH ROW
Begin

SELECT seq_tb_kpid.NEXTVAL
INTO :new.kpid
FROM DUAL;

End;

/
ALTER TRIGGER "INSERT_TB_KPID" ENABLE;
 

CREATE OR REPLACE TRIGGER "INSERT_TB_APPENDIX" BEFORE
INSERT ON "TB_APPENDIX" FOR EACH ROW
Begin

SELECT seq_tb_appendix.NEXTVAL
INTO :new.appendixid
FROM DUAL;

End;

/
ALTER TRIGGER "INSERT_TB_APPENDIX" ENABLE;
 

CREATE OR REPLACE TRIGGER "INSERT_TB_EXCHANGES" BEFORE
INSERT ON "TB_EXCHANGES" FOR EACH ROW
Begin

SELECT seq_tb_exchanges.NEXTVAL
INTO :new.id
FROM DUAL;

End;

/
ALTER TRIGGER "INSERT_TB_EXCHANGES" ENABLE;
 

CREATE OR REPLACE TRIGGER "INSERT_TB_INSCRAPT" BEFORE
INSERT ON "TB_INSCRIPT" FOR EACH ROW
Begin

SELECT seq_tb_inscript.NEXTVAL
INTO :new.inscriptman
FROM DUAL;

End;

/
ALTER TRIGGER "INSERT_TB_INSCRAPT" ENABLE;
 

CREATE OR REPLACE TRIGGER "INSERT_TB_MAINTEXT" BEFORE
INSERT ON "TB_MAINTEXT" FOR EACH ROW
Begin
SELECT SEQ_tb_maintext.NEXTVAL
INTO :NEW.maintextID
FROM DUAL;
End;

/
ALTER TRIGGER "INSERT_TB_MAINTEXT" ENABLE;
 

CREATE OR REPLACE TRIGGER "INSERT_TB_STEPLOG" BEFORE
INSERT ON "TB_STEPLOG" FOR EACH ROW
Begin

SELECT seq_tb_steplog_log_id.NEXTVAL
INTO :new.log_id
FROM DUAL;

End;

/
ALTER TRIGGER "INSERT_TB_STEPLOG" ENABLE;

/*修改信息交流内容表，增加类型字段2017-01-4*/
alter table TB_MAINTEXT add (
	"MSG_TYPE" INTEGER DEFAULT 1 NOT NULL ENABLE
  );

CREATE OR REPLACE FORCE VIEW "HKG_TB_INITLIST" ("APPLICATIONID", "KPID") AS 
  select applicationid,min(kpid) as kpid from tb_applicationkp GROUP by applicationid;

/*修改产品修改表，增加附件字段 2017-01-07*/
alter table HKG_MODIFY_PRODUCT add (
"ATTACH" VARCHAR2(500 BYTE) 
);

/*修改产品修改表，增加附件字段 2017-01-07*/
alter table HKG_MODIFY_PRODUCT add (
"ATTACH_THUMB" VARCHAR2(500 BYTE) 
);

